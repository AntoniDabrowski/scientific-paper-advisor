Unnamed: 0,further research line,further research prefix,further research suffix,publication date,title,primary category,categories,authors,abstract,x,y,z,cluster
147,"We leave this as an
open problem for further research.","It is natural to conjecture that our
construction (or a slightly modiÔ¨Åed construction) provides such a guarantee.","References

[ABES14]  B. Aronov, M. de Berg, E. Ezra, and M. Sharir.",2022-01-05 22:11:25+00:00,Sparsifying Disk Intersection Graphs for Reliable Connectivity,cs.CG,['cs.CG'],"[arxiv.Result.Author('Sariel Har-Peled'), arxiv.Result.Author('Eliot Wong Robson')]","The intersection graph induced by a set $\Disks$ of $n$ disks can be dense.
It is thus natural to try and sparsify it, while preserving connectivity.
Unfortunately, sparse graphs can always be made disconnected by removing a
small number of vertices. In this work, we present a sparsification algorithm
that maintains connectivity between two disks in the computed graph, if the
original graph remains ``well-connected'' even after removing an arbitrary
``attack'' set $\BSet \subseteq \Disks$ from both graphs. Thus, the new sparse
graph has similar reliability to the original disk graph, and can withstand
catastrophic failure of nodes while still providing a connectivity guarantee
for the remaining graph. The new graphs has near linear complexity, and can be
constructed in near linear time.
  The algorithm extends to any collection of shapes in the plane, such that
their union complexity is near linear.",-0.14949313,-0.24351656,-0.30745837,C
2303,"Lastly, there are several other directions for further research conceivable, e.g.","We are currently working on a generalization to point sets
    fulÔ¨Ålling (P1).","considering
    simple drawings (or other types of drawings) instead of straight-line drawings.",2022-02-22 11:45:15+00:00,Flipping Plane Spanning Paths,cs.CG,['cs.CG'],"[arxiv.Result.Author('Oswin Aichholzer'), arxiv.Result.Author('Kristin Knorr'), arxiv.Result.Author('Maarten L√∂ffler'), arxiv.Result.Author('Zuzana Mas√°rov√°'), arxiv.Result.Author('Wolfgang Mulzer'), arxiv.Result.Author('Johannes Obenaus'), arxiv.Result.Author('Rosna Paul'), arxiv.Result.Author('Birgit Vogtenhuber')]","Let $S$ be a planar point set in general position, and let $\mathcal{P}(S)$
be the set of all plane straight-line paths with vertex set $S$. A flip on a
path $P \in \mathcal{P}(S)$ is the operation of replacing an edge $e$ of $P$
with another edge $f$ on $S$ to obtain a new valid path from $\mathcal{P}(S)$.
It is a long-standing open question whether for every given planar point set
$S$, every path from $\mathcal{P}(S)$ can be transformed into any other path
from $\mathcal{P}(S)$ by a sequence of flips. To achieve a better understanding
of this question, we provide positive answers for special classes of point
sets, namely, for wheel sets, ice cream cones, double chains, and double
circles. Moreover, we show for general point sets, it is sufficient to prove
the statement for plane spanning paths whose first edge is fixed.",0.12243105,0.06858127,0.010245781,A
2304,"Lastly, there are several other directions for further research conceivable, e.g.","A proof for general
point sets, however, seems elusive at the moment.","considering simple drawings (or other types of drawings) instead of straight-line
drawings.",2022-02-22 11:45:15+00:00,Flipping Plane Spanning Paths,cs.CG,['cs.CG'],"[arxiv.Result.Author('Oswin Aichholzer'), arxiv.Result.Author('Kristin Knorr'), arxiv.Result.Author('Wolfgang Mulzer'), arxiv.Result.Author('Johannes Obenaus'), arxiv.Result.Author('Rosna Paul'), arxiv.Result.Author('Birgit Vogtenhuber')]","Let $S$ be a planar point set in general position, and let $\mathcal{P}(S)$
be the set of all plane straight-line paths with vertex set $S$. A flip on a
path $P \in \mathcal{P}(S)$ is the operation of replacing an edge $e$ of $P$
with another edge $f$ on $S$ to obtain a new valid path from $\mathcal{P}(S)$.
It is a long-standing open question whether for every given point set $S$,
every path from $\mathcal{P}(S)$ can be transformed into any other path from
$\mathcal{P}(S)$ by a sequence of flips. To achieve a better understanding of
this question, we show that it is sufficient to prove the statement for plane
spanning paths whose first edge is fixed. Furthermore, we provide positive
answers for special classes of point sets, namely, for wheel sets and
generalized double circles (which include, e.g., double chains and double
circles).",0.08641259,-0.005442374,-0.032659374,A
2874,"This                      condition number for sampling ùõæ, although further research on it
                                                                                          is needed.","We can consider this as a
number of binary subdivision steps to accelerate the algorithm.","strategy does indeed accelerate the sampler, as shown by experi-
                                                                                          Proof of Theorem 5.9.",2022-03-05 23:21:32+00:00,On the sampling error for parametric curves,cs.CG,"['cs.CG', 'cs.CC', 'cs.NA', 'math.NA', 'math.PR', '65D18, 33F05']","[arxiv.Result.Author('Apostolos Chalkis'), arxiv.Result.Author('Christina Katsamaki'), arxiv.Result.Author('Josu√© Tonelli-Cueto')]","Given a parametric polynomial curve $\gamma:[a,b]\rightarrow \mathbb{R}^n$,
how can we sample a point $\mathfrak{x}\in \mathrm{im}(\gamma)$ in such a way
that it is distributed uniformly with respect to the arc-length? Unfortunately,
we cannot sample exactly such a point -- even assuming we can perform exact
arithmetic operations. So we end up with the following question: how does the
method we choose affect the quality of the approximate sample we obtain? In
practice, there are many answers. However, in theory, there are still gaps in
our understanding. In this paper, we address this question from the point of
view of complexity theory, providing bounds in terms of the size of the desired
error.",-0.13588858,-0.22583559,-0.15574026,C
3282,"2.2.2 Exact Methods

   DSATUR has also been used as a subroutine in a branch-and-bound-based exact graph
   coloring algorithm, sometimes called Backtracking DSATUR [33], which became the de-facto
   standard algorithm for exact graph coloring for a while after its presentation in 1991; it was
   later improved by further research, in part driven by the 1993 DIMACS implementation
   challenge on Cliques, Coloring and SatisÔ¨Åability [36].","Variations of this heuristic have been studied and shown to be successful for certain
   graph classes [27].","More recently, San Segundo [34] and
   Furini et al.",2022-03-14 19:02:24+00:00,Minimum Partition into Plane Subgraphs: The CG:SHOP Challenge 2022,cs.CG,"['cs.CG', 'cs.DS', 'F.2.2']","[arxiv.Result.Author('S√°ndor P. Fekete'), arxiv.Result.Author('Phillip Keldenich'), arxiv.Result.Author('Dominik Krupke'), arxiv.Result.Author('Stefan Schirra')]","We give an overview of the 2022 Computational Geometry Challenge targeting
the problem Minimum Partition into Plane Subsets, which consists of
partitioning a given set of line segments into a minimum number of non-crossing
subsets.",-0.15674654,-0.09966215,0.14279138,C
3617,"As inducted in [24], it was shown that the
Dikin walk may be extended to generic curves with subconscious barriers, which
was proven in a further study.","Additionally, as stated in greater detail later
in this section, it generates proposal distributions beginning with the typical
logarithmic barrier for a polytope.",4       C. Karras et al.,2022-03-21 17:55:21+00:00,DBSOP: An Efficient Heuristic for Speedy MCMC Sampling on Polytopes,cs.CG,"['cs.CG', 'cs.DM']","[arxiv.Result.Author('Christos Karras'), arxiv.Result.Author('Aristeidis Karras')]","Markov Chain Monte Carlo (MCMC) techniques have long been studied in
computational geometry subjects whereabouts the problems to be studied are
complex geometric objects which by their nature require optimized techniques to
be deployed or to gain useful insights by them. MCMC approaches are directly
answering to geometric problems we are attempting to answer, and how these
problems could be deployed from theory to practice. Polytope which is a limited
volume in n-dimensional space specified by a collection of linear inequality
constraints require specific approximation. Therefore, sampling across density
based polytopes can not be performed without the use of such methods in which
the amount of repetition required is defined as a property of error margin. In
this work we propose a simple accurate sampling approach based on the
triangulation (tessellation) of a polytope. Moreover, we propose an efficient
algorithm named Density Based Sampling on Polytopes (DBSOP) for speedy MCMC
sampling where the time required to perform sampling is significantly lower
compared to existing approaches in low dimensions with complexity
$\mathcal{O}^{*}\left(n^{3}\right)$. Ultimately, we highlight possible future
aspects and how the proposed scheme can be further improved with the
integration of reservoir-sampling based methods resulting in more speedy and
efficient solution.",0.62422943,-0.2125301,0.4184097,B
3618,"As inducted in [27], it was shown that
the Dikin walk may be extended to generic curves with subconscious barriers,
which was proven in a further study.","Additionally, as stated in greater
detail later in this section, it generates proposal distributions beginning with the
typical logarithmic barrier for a polytope.",4       C. Karras et al.,2022-03-21 17:55:21+00:00,DBSOP: An Efficient Heuristic for Speedy MCMC Sampling on Polytopes,cs.CG,"['cs.CG', 'cs.DM']","[arxiv.Result.Author('Christos Karras'), arxiv.Result.Author('Aristeidis Karras')]","Markov Chain Monte Carlo (MCMC) techniques have long been studied in
computational geometry subjects whereabouts the problems to be studied are
complex geometric objects which by their nature require optimized techniques to
be deployed or to gain useful insights by them. MCMC approaches are directly
answering to geometric problems we are attempting to answer, and how these
problems could be deployed from theory to practice. Polytope which is a limited
volume in n-dimensional space specified by a collection of linear inequality
constraints require specific approximation. Therefore, sampling across density
based polytopes can not be performed without the use of such methods in which
the amount of repetition required is defined as a property of error margin. In
this work we propose a simple accurate sampling approach based on the
triangulation (tessellation) of a polytope. Moreover, we propose an efficient
algorithm named Density Based Sampling on Polytopes (DBSOP) for speedy MCMC
sampling where the time required to perform sampling is significantly lower
compared to existing approaches in low dimensions with complexity
$\mathcal{O}^{*}\left(n^{3}\right)$. Ultimately, we highlight possible future
aspects and how the proposed scheme can be further improved with the
integration of reservoir-sampling based methods resulting in more speedy and
efficient solution.",0.6245011,-0.21330804,0.41787428,B_centroid
3619,"As inducted in [27], it was shown that
the Dikin walk may be extended to generic curves with subconscious barriers,
which was proven in a further study.","Additionally, as stated in greater
detail later in this section, it generates proposal distributions beginning with the
typical logarithmic barrier for a polytope.",4       C. Karras et al.,2022-03-21 17:55:21+00:00,DBSOP: An Efficient Heuristic for Speedy MCMC Sampling on Polytopes,cs.CG,"['cs.CG', 'cs.DM']","[arxiv.Result.Author('Christos Karras'), arxiv.Result.Author('Aristeidis Karras')]","Markov Chain Monte Carlo (MCMC) techniques have long been studied in
computational geometry subjects whereabouts the problems to be studied are
complex geometric objects which by their nature require optimized techniques to
be deployed or to gain useful insights by them. MCMC approaches are directly
answering to geometric problems we are attempting to answer, and how these
problems could be deployed from theory to practice. Polytope which is a limited
volume in n-dimensional space specified by a collection of linear inequality
constraints require specific approximation. Therefore, sampling across density
based polytopes can not be performed without the use of such methods in which
the amount of repetition required is defined as a property of error margin. In
this work we propose a simple accurate sampling approach based on the
triangulation (tessellation) of a polytope. Moreover, we propose an efficient
algorithm named Density Based Sampling on Polytopes (DBSOP) for speedy MCMC
sampling where the time required to perform sampling is significantly lower
compared to existing approaches in low dimensions with complexity
$\mathcal{O}^{*}\left(n^{3}\right)$. Ultimately, we highlight possible future
aspects and how the proposed scheme can be further improved with the
integration of reservoir-sampling based methods resulting in more speedy and
efficient solution.",0.6245011,-0.21330804,0.41787428,B
4471,"[PVDT21] explicitly compare their edit distance method to
entry point for further research into this Ô¨Åeld and its application     these distance measures.","Pont
notion of tree edit distances as a whole, and we aim to provide an      et al.","An example for a more advanced method
in scientiÔ¨Åc visualization and computational topology, for which it     based on persistence diagrams is the work by Rieck et al.",2022-04-06 16:19:39+00:00,Branch Decomposition-Independent Edit Distances for Merge Trees,cs.CG,"['cs.CG', 'cs.GR']","[arxiv.Result.Author('Florian Wetzels'), arxiv.Result.Author('Heike Leitte'), arxiv.Result.Author('Christoph Garth')]","Edit distances between merge trees of scalar fields have many applications in
scientific visualization, such as ensemble analysis, feature tracking or
symmetry detection. In this paper, we propose branch mappings, a novel approach
to the construction of edit mappings for merge trees. Classic edit mappings
match nodes or edges of two trees onto each other, and therefore have to either
rely on branch decompositions of both trees or have to use auxiliary node
properties to determine a matching. In contrast, branch mappings employ branch
properties instead of node similarity information, and are independent of
predetermined branch decompositions. Especially for topological features, which
are typically based on branch properties, this allows a more intuitive distance
measure which is also less susceptible to instabilities from small-scale
perturbations. We describe a quartic runtime algorithm for computing optimal
branch mappings, which is faster than the only other branch
decomposition-independent method in the literature by more than a linear
factor. Furthermore, we compare the results of our method on synthetic and
real-world examples to demonstrate its practicality and utility.",-0.07455511,0.10847432,0.023865733,A
5760,"There are
many directions for further research on this problem and the general Euclidean k-dispersion problem.","22

6 Conclusion

In this paper, we studied the k-dispersion problem on a convex polygon and proposed an exponential
time exact algorithm for any k and a logarithmic time approximation algorithm for k = 3.","9
Since the NP-hardness of the convex version of the problem is unknown, the problem is open from the
point of polynomial exact algorithm or faster exact exponential algorithm.",2022-05-04 12:06:53+00:00,Max-Min $k$-Dispersion on a Convex Polygon,cs.CG,['cs.CG'],"[arxiv.Result.Author('Vishwanath R. Singireddy'), arxiv.Result.Author('Manjanna Basappa')]","In this paper, we consider the following $k$-dispersion problem. Given a set
$S$ of $n$ points placed in the plane in a convex position, and an integer $k$
($0<k<n$), the objective is to compute a subset $S'\subset S$ such that
$|S'|=k$ and the minimum distance between a pair of points in $S'$ is
maximized. Based on the bounded search tree method we propose an exact
fixed-parameter algorithm in $O(2^k(n^2\log n+n(\log^2 n)(\log k)))$ time, for
this problem, where $k$ is the parameter. The proposed exact algorithm is
better than the current best exact exponential algorithm
[$n^{O(\sqrt{k})}$-time algorithm by Akagi et al.,(2018)] whenever
$k<c\log^2{n}$ for some constant $c$. We then present an $O(\log{n})$-time
$\frac{1}{2\sqrt{2}}$-approximation algorithm for the problem when $k=3$ if the
points are given in convex position order.",-0.21563765,-0.16801593,0.050583445,C
6073,"Understanding persistent contact properties of
                                                                    shapes and motions requires further research (out of scope here).",improve its chances.,"In contrast, our procedure does not require either part‚Äôs
shape to be Ô¨Åxed upfront and can generate families of max-

                                                                 2
  5.",2022-05-11 20:15:44+00:00,Co-generation of Collision-Free Shapes for Arbitrary One-Parametric Motion,cs.CG,"['cs.CG', 'cs.CE', 'cs.GR', 'cs.RO']","[arxiv.Result.Author('Clinton B. Morris'), arxiv.Result.Author('Morad Behandish')]","Mechanical assemblies can exhibit complex relative motions, during which
collisions between moving parts and their surroundings must be avoided. To
define feasible design spaces for each part's shape, ""maximal"" collision-free
pointsets can be computed using configuration space modeling techniques such as
Minkowski operations and sweep/unsweep. For example, for a pair of parts
undergoing a given relative motion, to make the problem well-posed, the
geometry of one part (chosen arbitrarily) must be fixed to compute the maximal
shape of the other part by an unsweep operation. Making such arbitrary choices
in a multi-component assembly can place unnecessary restrictions on the design
space. A broader family of collision-free pairs of parts can be explored, if
fixing the geometry of a component is not required. In this paper, we formalize
this family of collision-free shapes and introduce a generic method for
generating a broad subset of them. Our procedure, which is an extension of the
unsweep, allows for co-generation of a pair of geometries which are modified
incrementally and simultaneously to avoid collision. We demonstrate the
effectiveness and scalability of our procedure in both 2D and 3D by generating
a variety of collision-free shapes. Notably, we show that our approach can
automatically generate freeform cam and follower profiles, gear teeth, and
screw threads, starting from colliding blocks of materials, solely from a
specification of relative motion and without the use of any feature-informed
heuristics. Moreover, our approach provides continuous measures of collision
that can be incorporated into standard gradient-descent design optimization,
allowing for simultaneous collision-free and physics-informed co-design of
mechanical parts for assembly.",0.30247957,0.6663947,-0.2200216,A_centroid
6074,"Understanding persistent contact properties of
                                                                    shapes and motions requires further research (out of scope here).",improve its chances.,"In contrast, our procedure does not require either part‚Äôs
shape to be Ô¨Åxed upfront and can generate families of max-

                                                                 2
  5.",2022-05-11 20:15:44+00:00,Co-generation of Collision-Free Shapes for Arbitrary One-Parametric Motion,cs.CG,"['cs.CG', 'cs.CE', 'cs.GR', 'cs.RO']","[arxiv.Result.Author('Clinton B. Morris'), arxiv.Result.Author('Morad Behandish')]","Mechanical assemblies can exhibit complex relative motions, during which
collisions between moving parts and their surroundings must be avoided. To
define feasible design spaces for each part's shape, ""maximal"" collision-free
pointsets can be computed using configuration space modeling techniques such as
Minkowski operations and sweep/unsweep. For example, for a pair of parts
undergoing a given relative motion, to make the problem well-posed, the
geometry of one part (chosen arbitrarily) must be fixed to compute the maximal
shape of the other part by an unsweep operation. Making such arbitrary choices
in a multi-component assembly can place unnecessary restrictions on the design
space. A broader family of collision-free pairs of parts can be explored, if
fixing the geometry of a component is not required. In this paper, we formalize
this family of collision-free shapes and introduce a generic method for
generating a broad subset of them. Our procedure, which is an extension of the
unsweep, allows for co-generation of a pair of geometries which are modified
incrementally and simultaneously to avoid collision. We demonstrate the
effectiveness and scalability of our procedure in both 2D and 3D by generating
a variety of collision-free shapes. Notably, we show that our approach can
automatically generate freeform cam and follower profiles, gear teeth, and
screw threads, starting from colliding blocks of materials, solely from a
specification of relative motion and without the use of any feature-informed
heuristics. Moreover, our approach provides continuous measures of collision
that can be incorporated into standard gradient-descent design optimization,
allowing for simultaneous collision-free and physics-informed co-design of
mechanical parts for assembly.",0.30247957,0.6663947,-0.2200216,A
6075,"Understanding persistent contact properties of
                                                                    shapes and motions requires further research (out of scope here).",improve its chances.,"In contrast, our procedure does not require either part‚Äôs
shape to be Ô¨Åxed upfront and can generate families of max-

                                                                 2
  5.",2022-05-11 20:15:44+00:00,Co-generation of Collision-Free Shapes for Arbitrary One-Parametric Motion,cs.CG,"['cs.CG', 'cs.CE', 'cs.GR', 'cs.RO']","[arxiv.Result.Author('Clinton B. Morris'), arxiv.Result.Author('Morad Behandish')]","Mechanical assemblies can exhibit complex relative motions, during which
collisions between moving parts and their surroundings must be avoided. To
define feasible design spaces for each part's shape, ""maximal"" collision-free
pointsets can be computed using configuration space modeling techniques such as
Minkowski operations and sweep/unsweep. For example, for a pair of parts
undergoing a given relative motion, to make the problem well-posed, the
geometry of one part (chosen arbitrarily) must be fixed to compute the maximal
shape of the other part by an unsweep operation. Making such arbitrary choices
in a multi-component assembly can place unnecessary restrictions on the design
space. A broader family of collision-free pairs of parts can be explored, if
fixing the geometry of a component is not required. In this paper, we formalize
this family of collision-free shapes and introduce a generic method for
generating a broad subset of them. Our procedure, which is an extension of the
unsweep, allows for co-generation of a pair of geometries which are modified
incrementally and simultaneously to avoid collision. We demonstrate the
effectiveness and scalability of our procedure in both 2D and 3D by generating
a variety of collision-free shapes. Notably, we show that our approach can
automatically generate freeform cam and follower profiles, gear teeth, and
screw threads, starting from colliding blocks of materials, solely from a
specification of relative motion and without the use of any feature-informed
heuristics. Moreover, our approach provides continuous measures of collision
that can be incorporated into standard gradient-descent design optimization,
allowing for simultaneous collision-free and physics-informed co-design of
mechanical parts for assembly.",0.30247957,0.6663947,-0.2200216,A
6485,"No work is ever complete, therefore it is important to highlight a few possible further research
directions:

     Paired-trees: Worst-time complexities for k-nearest neighbors and the minimum spanning

                                                              124
Chapter 6.","It was shown experimentally that mergegram produces excellent
results in 2d shape recognition when it was combined with Perslay-neural network architecture.","Conclusions  125

tree problem can be potentially improved by using cover trees of both query and reference sets.",2022-05-20 14:13:43+00:00,New compressed cover tree for k-nearest neighbor search,cs.CG,"['cs.CG', 'cs.CC']",[arxiv.Result.Author('Yury Elkin')],"This thesis consists of two topics related to computational geometry and one
topic related to topological data analysis (TDA), which combines fields of
computational geometry and algebraic topology for analyzing data. The first
part studies the classical problem of finding k nearest neighbors to m query
points in a larger set of n reference points in any metric space. The second
part is about the construction of a Minimum Spanning Tree (MST) on any finite
metric space. The third part extends the key concept of persistence within
Topological Data Analysis in a new direction.",-0.5515827,0.29062572,0.43175608,C
6486,"No work is ever complete, therefore it is important to highlight a few possible further research
directions:

     Paired-trees: Worst-time complexities for k-nearest neighbors and the minimum spanning

                                                              123
124  Yury Elkin

tree problem can be potentially improved by using cover trees of both query and reference sets.","It was shown experimentally that mergegram produces excellent
results in 2d shape recognition when it was combined with Perslay-neural network architecture.","Given query and reference sets Q, R we wish to develop an algorithm that scans through all
relevant pairs of Q √ó R in time O(cO(1) ¬∑ max{|Q|, |R|}), where c is an expansion constant that
depends on sets Q,R.",2022-05-20 14:13:43+00:00,New compressed cover tree for k-nearest neighbor search,cs.CG,"['cs.CG', 'cs.CC']",[arxiv.Result.Author('Yury Elkin')],"This thesis consists of two topics related to computational geometry and one
topic related to topological data analysis (TDA), which combines fields of
computational geometry and algebraic topology for analyzing data. The first
part studies the classical problem of finding k nearest neighbors to m query
points in a larger set of n reference points in any metric space. The second
part is about the construction of a Minimum Spanning Tree (MST) on any finite
metric space. The third part extends the key concept of persistence within
Topological Data Analysis in a new direction.",-0.616799,0.2487596,0.38057077,C_centroid
6487,"No work is ever complete, therefore it is important to highlight a few possible further research
directions:

     Paired-trees: Worst-time complexities for k-nearest neighbors and the minimum spanning

                                                              123
124  Yury Elkin

tree problem can be potentially improved by using cover trees of both query and reference sets.","It was shown experimentally that mergegram produces excellent
results in 2d shape recognition when it was combined with Perslay-neural network architecture.","Given query and reference sets Q, R we wish to develop an algorithm that scans through all
relevant pairs of Q √ó R in time O(cO(1) ¬∑ max{|Q|, |R|}), where c is an expansion constant that
depends on sets Q,R.",2022-05-20 14:13:43+00:00,New compressed cover tree for k-nearest neighbor search,cs.CG,"['cs.CG', 'cs.CC']",[arxiv.Result.Author('Yury Elkin')],"This thesis consists of two topics related to computational geometry and one
topic related to topological data analysis (TDA), which combines fields of
computational geometry and algebraic topology for analyzing data. The first
part studies the classical problem of finding k nearest neighbors to m query
points in a larger set of n reference points in any metric space. The second
part is about the construction of a Minimum Spanning Tree (MST) on any finite
metric space. The third part extends the key concept of persistence within
Topological Data Analysis in a new direction.",-0.616799,0.2487596,0.38057077,C
8263,"A more practically oriented direction for further research would be to develop a less naive
method of Ô¨Ålling gaps than the mixed morph.","Another direction is to develop other morphs that guarantee a smooth change of
some distance measure other than the HausdorÔ¨Ä distance; we noted that it is unclear how
to employ the Fr¬¥echet distance for morphing in the presence of multiple components.","It does not necessarily make sense to use the
same radius for the closing operator everywhere, which sometimes closes gaps that will be
opened again.",2022-06-30 15:12:18+00:00,Abstract morphing using the Hausdorff distance and Voronoi diagrams,cs.CG,['cs.CG'],"[arxiv.Result.Author('Lex de Kogel'), arxiv.Result.Author('Marc van Kreveld'), arxiv.Result.Author('Jordi L. Vermeulen')]","This paper introduces two new abstract morphs for two $2$-dimensional shapes.
The intermediate shapes gradually reduce the Hausdorff distance to the goal
shape and increase the Hausdorff distance to the initial shape. The morphs are
conceptually simple and apply to shapes with multiple components and/or holes.
We prove some basic properties relating to continuity, containment, and area.
Then we give an experimental analysis that includes the two new morphs and a
recently introduced abstract morph that is also based on the Hausdorff distance
(Van Kreveld et al. Between shapes, using the Hausdorff distance. Computational
Geometry 100:101817, 2022). We show results on the area and perimeter
development throughout the morph, and also the number of components and holes.
A visual comparison shows that one of the new morphs appears most attractive.",0.05010546,0.10239223,-0.19487607,C
8918,"Proving a sharp bound
on the approximation factor is an interesting problem for further research.",The bound of 1 ¬¥ 4Œµ on the approximation factor is most likely not tight.,Corollary 6.4.,2022-07-14 21:33:31+00:00,Computing Optimal Kernels in Two Dimensions,cs.CG,['cs.CG'],"[arxiv.Result.Author('Pankaj K. Agarwal'), arxiv.Result.Author('Sariel Har-Peled')]","Let $P$ be a set of $n$ points in $\mathbb{R}^2$. A subset $C\subseteq P$ is
an $\varepsilon$-kernel of $P$ if the projection of the convex hull of $C$
approximates that of $P$ within $(1-\varepsilon)$-factor in every direction.
The set $C$ is a weak $\varepsilon$-kernel if its directional width
approximates that of $P$ in every direction. We present fast algorithms for
computing a minimum-size $\varepsilon$-kernel as well as a weak
$\varepsilon$-kernel. We also present a fast algorithm for the Hausdorff
variant of this problem.
  In addition, we introduce the notion of $\varepsilon$-core, a convex polygon
lying inside $CH(P)$, prove that it is a good approximation of the optimal
$\varepsilon$-kernel, present an efficient algorithm for computing it, and use
it to compute an $\varepsilon$-kernel of small size.",-0.153676,-0.3465417,-0.15432423,C
10077,We propose the following open questions for further study.,"One could
also try to generalize the set of objects, for example, adapting the minimum area algorithm
to arbitrary convex objects.","Is there a polynomial-time exact algorithm for the minimum area convex intersecting
    polygon of segments?",2022-08-16 07:15:30+00:00,Computing Smallest Convex Intersecting Polygons,cs.CG,['cs.CG'],"[arxiv.Result.Author('Antonios Antoniadis'), arxiv.Result.Author('Mark de Berg'), arxiv.Result.Author('S√°ndor Kisfaludi-Bak'), arxiv.Result.Author('Antonis Skarlatos')]","A polygon C is an intersecting polygon for a set O of objects in the plane if
C intersects each object in O, where the polygon includes its interior. We
study the problem of computing the minimum-perimeter intersecting polygon and
the minimum-area convex intersecting polygon for a given set O of objects. We
present an FPTAS for both problems for the case where O is a set of possibly
intersecting convex polygons in the plane of total complexity n.
  Furthermore, we present an exact polynomial-time algorithm for the
minimum-perimeter intersecting polygon for the case where O is a set of n
possibly intersecting segments in the plane. So far, polynomial-time exact
algorithms were only known for the minimum perimeter intersecting polygon of
lines or of disjoint segments.",-0.09085165,-0.14901647,-0.14070398,C
10365,There are numerous open problems for further research raised by our work.,"We then solved the dual problem of guarding a point set against convex regions by inserting guards, except
that in this case in addition to the rounding provided by the ‚Äústandard‚Äù weak Œµ-net, we had to use dynamic
programming to Ô¨Ånd bad convex regions if they exists.","The Ô¨Årst one is improving the
approximation quality even further.",2022-08-24 02:35:12+00:00,Halving by a Thousand Cuts or Punctures,cs.CG,['cs.CG'],"[arxiv.Result.Author('Sariel Har-Peled'), arxiv.Result.Author('Da Wei Zheng')]","$\newcommand{\Arr}{\mathcal{A}} \newcommand{\numS}{k}
\newcommand{\ArrX}[1]{\Arr(#1)} \newcommand{\eps}{\varepsilon}
\newcommand{\opt}{\mathsf{o}}$ For point sets $P_1, \ldots, P_\numS$, a set of
lines $L$ is halving if any face of the arrangement $\ArrX{L}$ contains at most
$|P_i|/2$ points of $P_i$, for all $i$. We study the problem of computing a
halving set of lines of minimal size. Surprisingly, we show a polynomial time
algorithm that outputs a halving set of size $O(\opt^{3/2})$, where $\opt$ is
the size of the optimal solution. Our solution relies on solving a new variant
of the weak $\eps$-net problem for corridors, which we believe to be of
independent interest.
  We also study other variants of this problem, including an alternative
setting, where one needs to introduce a set of guards (i.e., points), such that
no convex set avoiding the guards contains more than half the points of each
point set.",-0.09828857,-0.3097751,-0.031388864,C
10366,"Ultimately,
improving and simplifying Rubin‚Äôs construction in 2d seems like a worthy problem for further research.",It is natural to further investigate this connection.,"Beyond that, this work emphasize the ‚Äúrounding is approximation‚Äù approach.",2022-08-24 02:35:12+00:00,Halving by a Thousand Cuts or Punctures,cs.CG,['cs.CG'],"[arxiv.Result.Author('Sariel Har-Peled'), arxiv.Result.Author('Da Wei Zheng')]","$\newcommand{\Arr}{\mathcal{A}} \newcommand{\numS}{k}
\newcommand{\ArrX}[1]{\Arr(#1)} \newcommand{\eps}{\varepsilon}
\newcommand{\opt}{\mathsf{o}}$ For point sets $P_1, \ldots, P_\numS$, a set of
lines $L$ is halving if any face of the arrangement $\ArrX{L}$ contains at most
$|P_i|/2$ points of $P_i$, for all $i$. We study the problem of computing a
halving set of lines of minimal size. Surprisingly, we show a polynomial time
algorithm that outputs a halving set of size $O(\opt^{3/2})$, where $\opt$ is
the size of the optimal solution. Our solution relies on solving a new variant
of the weak $\eps$-net problem for corridors, which we believe to be of
independent interest.
  We also study other variants of this problem, including an alternative
setting, where one needs to introduce a set of guards (i.e., points), such that
no convex set avoiding the guards contains more than half the points of each
point set.",-0.022494774,-0.1997819,-0.02150292,C
11033,This question is for further research.,"A workspace can be constructed in which the number of RTD cells with non-empty result
is greater by a factor of O(n) than the complexity of an optimal algorithm, even if the
workspace is simple (without holes).","3 Sensor Positions for a Fixed Reading

Given a sensor reading d, we concern ourselves in the section with the shape and com-
plexity of the locus of sensor positions that result in such a reading, namely ignoring the

    2For k = 0 we still need to check the cell at the top of the list to Ô¨Ånd out that no relevant cells exist.",2022-09-11 11:10:34+00:00,Localization with Few Distance Measurements,cs.CG,"['cs.CG', 'cs.RO']","[arxiv.Result.Author('Dan Halperin'), arxiv.Result.Author('Steven M. LaValle'), arxiv.Result.Author('Barak Ugav')]","Given a polygon $W$, a depth sensor placed at point $p=(x,y)$ inside $W$ and
oriented in direction $\theta$ measures the distance $d=h(x,y,\theta)$ between
$p$ and the closest point on the boundary of $W$ along a ray emanating from $p$
in direction $\theta$. We study the following problem: Give a polygon $W$,
possibly with holes, with $n$ vertices, preprocess it such that given a query
real value $d\geq 0$, one can efficiently compute the preimage $h^{-1}(d)$,
namely determine all the possible poses (positions and orientations) of a depth
sensor placed in $W$ that would yield the reading $d$. We employ a
decomposition of $W\times S^1$, which is an extension of the celebrated
trapezoidal decomposition, and which we call rotational trapezoidal
decomposition and present an efficient data structure, which computes the
preimage in an output-sensitive fashion relative to this decomposition: if $k$
cells of the decomposition contribute to the final result, we will report them
in $O(k+1)$ time, after $O(n^2\log n)$ preprocessing time and using $O(n^2)$
storage space. We also analyze the shape of the projection of the preimage onto
the polygon $W$; this projection describes the portion of $W$ where the sensor
could have been placed. Furthermore, we obtain analogous results for the more
useful case (narrowing down the set of possible poses), where the sensor
performs two depth measurement from the same point $p$, one in direction
$\theta$ and the other in direction $\theta+\pi$. While localizations problems
in robotics are often carried out by exploring the full visibility polygon of a
sensor placed at a fixed point of the environment, the approach that we propose
here opens the door to sufficing with only few depth measurements, which is
advantageous as it allows for usage of inexpensive sensors and could also lead
to savings in storage and communication costs.",-0.10702676,-0.20213628,-0.41969052,C
11034,We leave this as an open problem for further research.,"It might be the case that special
properties of the regions Œ®d(C) and their juxtaposition could be used to show that the
complexity of the union is o(k2).","9
(a)  (b)     (c)

Figure 7: Examples of the planar projection of possible conÔ¨Ågurations of a single cell with
a Ô¨Åxed reading d: (a) both limiting vertices lie on the top edge, the resulting curves are arcs
and do not intersect the bottom edge (b) the limiting vertices and arc curves are similar to
(a), but the result intersects the bottom edge (c) one limiting vertex lies on the top edge and
one is not, resulting in an arc and a conchoid.",2022-09-11 11:10:34+00:00,Localization with Few Distance Measurements,cs.CG,"['cs.CG', 'cs.RO']","[arxiv.Result.Author('Dan Halperin'), arxiv.Result.Author('Steven M. LaValle'), arxiv.Result.Author('Barak Ugav')]","Given a polygon $W$, a depth sensor placed at point $p=(x,y)$ inside $W$ and
oriented in direction $\theta$ measures the distance $d=h(x,y,\theta)$ between
$p$ and the closest point on the boundary of $W$ along a ray emanating from $p$
in direction $\theta$. We study the following problem: Give a polygon $W$,
possibly with holes, with $n$ vertices, preprocess it such that given a query
real value $d\geq 0$, one can efficiently compute the preimage $h^{-1}(d)$,
namely determine all the possible poses (positions and orientations) of a depth
sensor placed in $W$ that would yield the reading $d$. We employ a
decomposition of $W\times S^1$, which is an extension of the celebrated
trapezoidal decomposition, and which we call rotational trapezoidal
decomposition and present an efficient data structure, which computes the
preimage in an output-sensitive fashion relative to this decomposition: if $k$
cells of the decomposition contribute to the final result, we will report them
in $O(k+1)$ time, after $O(n^2\log n)$ preprocessing time and using $O(n^2)$
storage space. We also analyze the shape of the projection of the preimage onto
the polygon $W$; this projection describes the portion of $W$ where the sensor
could have been placed. Furthermore, we obtain analogous results for the more
useful case (narrowing down the set of possible poses), where the sensor
performs two depth measurement from the same point $p$, one in direction
$\theta$ and the other in direction $\theta+\pi$. While localizations problems
in robotics are often carried out by exploring the full visibility polygon of a
sensor placed at a fixed point of the environment, the approach that we propose
here opens the door to sufficing with only few depth measurements, which is
advantageous as it allows for usage of inexpensive sensors and could also lead
to savings in storage and communication costs.",-0.005923721,-0.17639971,-0.15640971,C
11035,This question is for further research.,"A
workspace can be constructed in which the number of RTD cells with non-empty result
is greater by a factor of O(n) than the complexity of an optimal algorithm, even if the
workspace is simple (without holes).","11
A Calculating OC(Œ∏, x)

For each RTD cell C, the opening function O(Œ∏, x) deÔ¨Åned at DeÔ¨Ånition 1, can be an-

alytically           described.",2022-09-11 11:10:34+00:00,Localization with Few Distance Measurements,cs.CG,"['cs.CG', 'cs.RO']","[arxiv.Result.Author('Dan Halperin'), arxiv.Result.Author('Steven M. LaValle'), arxiv.Result.Author('Barak Ugav')]","Given a polygon $W$, a depth sensor placed at point $p=(x,y)$ inside $W$ and
oriented in direction $\theta$ measures the distance $d=h(x,y,\theta)$ between
$p$ and the closest point on the boundary of $W$ along a ray emanating from $p$
in direction $\theta$. We study the following problem: Give a polygon $W$,
possibly with holes, with $n$ vertices, preprocess it such that given a query
real value $d\geq 0$, one can efficiently compute the preimage $h^{-1}(d)$,
namely determine all the possible poses (positions and orientations) of a depth
sensor placed in $W$ that would yield the reading $d$. We employ a
decomposition of $W\times S^1$, which is an extension of the celebrated
trapezoidal decomposition, and which we call rotational trapezoidal
decomposition and present an efficient data structure, which computes the
preimage in an output-sensitive fashion relative to this decomposition: if $k$
cells of the decomposition contribute to the final result, we will report them
in $O(k+1)$ time, after $O(n^2\log n)$ preprocessing time and using $O(n^2)$
storage space. We also analyze the shape of the projection of the preimage onto
the polygon $W$; this projection describes the portion of $W$ where the sensor
could have been placed. Furthermore, we obtain analogous results for the more
useful case (narrowing down the set of possible poses), where the sensor
performs two depth measurement from the same point $p$, one in direction
$\theta$ and the other in direction $\theta+\pi$. While localizations problems
in robotics are often carried out by exploring the full visibility polygon of a
sensor placed at a fixed point of the environment, the approach that we propose
here opens the door to sufficing with only few depth measurements, which is
advantageous as it allows for usage of inexpensive sensors and could also lead
to savings in storage and communication costs.",-0.043856144,-0.30150682,-0.3997237,C
